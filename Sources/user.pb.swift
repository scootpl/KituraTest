/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: user.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct User: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "User"}
  public var protoMessageName: String {return "User"}
  public var protoPackageName: String {return ""}
  public var jsonFieldNames: [String: Int] {return [
    "uuid": 1,
    "user": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "uuid": 1,
    "user": 2,
  ]}

  public var uuid: String = ""

  public var user: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &uuid)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &user)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if uuid != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: uuid, protoFieldNumber: 1, protoFieldName: "uuid", jsonFieldName: "uuid", swiftFieldName: "uuid")
    }
    if user != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: user, protoFieldNumber: 2, protoFieldName: "user", jsonFieldName: "user", swiftFieldName: "user")
    }
  }

  public func _protoc_generated_isEqualTo(other: User) -> Bool {
    if uuid != other.uuid {return false}
    if user != other.user {return false}
    return true
  }
}
